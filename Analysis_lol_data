#EDA for analysing LOL data

library(tidyverse)
library(broom)
library(knitr)
library(ggfortify)
library(readr)
library(dplyr)
#install.packages("ggfortify")
data_lol <- read_csv("C:/lol_ranked_games.csv")
data_lol[,'hasWon'] <- lapply(data_lol[,'hasWon'],as.factor)
data_lol[,'isFirstTower'] <- lapply(data_lol[,'isFirstTower'],as.factor)
data_lol[,'isFirstBlood'] <- lapply(data_lol[,'isFirstBlood'],as.factor)

str(data_lol)
#EDA
str(data_lol)
# 242572 X 59 datas

length(unique(data_lol$gameId)) # Total 24912 games
data_win <- data_lol %>% group_by(gameId,hasWon) %>% summarise(sum(hasWon)) 
sum(data_win$hasWon==1) # 12539 wins
sum(data_win$hasWon==0) # 12373 loses

"""
Blue win:   12539 games
Pulple win: 12373 games
"""
#1) gold and exp
data_normal <- data_lol %>% select(gameId,frame,hasWon,goldDiff,expDiff,champLevelDiff)
# by frame
#gold
data_normal %>% group_by(frame,hasWon)  %>% summarise(m_g=mean(goldDiff)) %>%
  ggplot(aes(x=frame,y=m_g,fill=hasWon)) +
  geom_bar(stat = "identity")

#exp
data_normal %>% group_by(frame,hasWon)  %>% summarise(m_e=mean(expDiff)) %>%
  ggplot(aes(x=frame,y=m_e,fill=hasWon)) +
  geom_bar(stat = "identity")

#Level
data_normal %>% group_by(frame,hasWon)  %>% summarise(m_c=mean(champLevelDiff)) %>%
  ggplot(aes(x=frame,y=m_c,fill=hasWon)) +
  geom_bar(stat = "identity")


#2) Epic Monster
#(1) kill
data_drake <- data_lol %>% select(gameId,frame,hasWon,killedFireDrake:lostRiftHerald) %>% mutate(killedTotaldrake=killedFireDrake+killedWaterDrake+killedAirDrake+killedEarthDrake)
data_drake <- data_drake %>% select(gameId,frame,hasWon,killedFireDrake:lostRiftHerald) %>% mutate(lostTotaldrake=lostFireDrake+lostWaterDrake+lostAirDrake+lostEarthDrake)

data_drake %>% group_by(gameId,hasWon) %>% summarise(x_T=max(killedTotaldrake)) %>%
  ggplot(aes(x=gameId,y=x_T)) +
  geom_point() + facet_wrap(~ hasWon, ncol = 2)


#win vs lose killedTotaldrake
data_drake %>% group_by(gameId,hasWon) %>% summarise(x_T=max(killedTotaldrake)) %>% group_by(x_T,hasWon) %>% summarise(n_T=n())%>%
  ggplot(aes(x=x_T,y=n_T)) +
  geom_bar(stat = "identity")+
facet_wrap(~ hasWon, ncol = 2)

# elder drake
data_drake %>% group_by(killedElderDrake,gameId) %>% summarise() %>% summarise(n())
"""

Elder drake
not be killed: 24912 
so, visualization except 'not be killed' for visual convenience.

"""

data_drake %>% filter(killedElderDrake>0) %>% group_by(gameId,hasWon) %>% summarise(x_E=max(killedElderDrake)) %>% group_by(x_E,hasWon) %>% summarise(n_E=n())%>%
  ggplot(aes(x=x_E,y=n_E)) +
  geom_bar(stat = "identity")+
  facet_wrap(~ hasWon, ncol = 2)

"""
    e  hasWon    n_E
  <dbl> <fct>  <int>
1     1 0        118
2     1 1        453
3     2 0          5
4     2 1         22
5     3 1          3
"""
#Baron
data_drake %>% group_by(gameId,hasWon) %>% summarise(x_N=max(killedBaronNashor)) %>% group_by(x_N,hasWon) %>% summarise(n_N=n())%>%
  ggplot(aes(x=x_N,y=n_N)) +
  geom_bar(stat = "identity")+
  facet_wrap(~ hasWon, ncol = 2)


#Riftherreld
data_drake %>% group_by(gameId,hasWon) %>% summarise(x_R=max(killedRiftHerald)) %>% group_by(x_R,hasWon) %>% summarise(n_R=n())%>%
  ggplot(aes(x=x_R,y=n_R)) +
  geom_bar(stat = "identity")+
  facet_wrap(~ hasWon, ncol = 2)


#(2) lost

data_drake %>% group_by(gameId,hasWon) %>% summarise(x_T=max(lostTotaldrake)) %>%
  ggplot(aes(x=gameId,y=x_T)) +
  geom_point() + facet_wrap(~ hasWon, ncol = 2)


#win vs lose lostTotaldrake
data_drake %>% group_by(gameId,hasWon) %>% summarise(x_T=max(lostTotaldrake)) %>% group_by(x_T,hasWon) %>% summarise(n_T=n())%>%
  ggplot(aes(x=x_T,y=n_T)) +
  geom_bar(stat = "identity")+
  facet_wrap(~ hasWon, ncol = 2)

# elder drake
data_drake %>% group_by(lostElderDrake,gameId) %>% summarise() %>% summarise(n())
"""

Elder drake
not be lost: 24912 
so, visualization except 'not be lost' for visual convenience.

"""

data_drake %>% filter(lostElderDrake>0) %>% group_by(gameId,hasWon) %>% summarise(x_E=max(lostElderDrake)) %>% group_by(x_E,hasWon) %>% summarise(n_E=n())%>%
  ggplot(aes(x=x_E,y=n_E)) +
  geom_bar(stat = "identity")+
  facet_wrap(~ hasWon, ncol = 2)

"""
    e  hasWon    n_E
  <dbl> <fct>  <int>
1     1 0        118
2     1 1        453
3     2 0          5
4     2 1         22
5     3 1          3
"""
#Baron
data_drake %>% group_by(gameId,hasWon) %>% summarise(x_N=max(lostBaronNashor)) %>% group_by(x_N,hasWon) %>% summarise(n_N=n())%>%
  ggplot(aes(x=x_N,y=n_N)) +
  geom_bar(stat = "identity")+
  facet_wrap(~ hasWon, ncol = 2)


#Riftherreld
data_drake %>% group_by(gameId,hasWon) %>% summarise(x_R=max(lostRiftHerald)) %>% group_by(x_R,hasWon) %>% summarise(n_R=n())%>%
  ggplot(aes(x=x_R,y=n_R)) +
  geom_bar(stat = "identity")+
  facet_wrap(~ hasWon, ncol = 2)

#turret
data_turret <- data_lol %>% select(gameId,frame,hasWon,destroyedTopInhibitor:lostBotOuterTurret)

# The time when destroyed each turret or 
# which place's turret first destroyed? or  
# howmany?


data_turret %>% filter(destroyedTopInhibitor==2)

data_TopInhibitor <- data_turret %>% filter(destroyedTopInhibitor==1) %>% 
  group_by(gameId,hasWon) %>% 
  summarise(d.time=min(frame))
mean(data_TopInhibitor$d.time)


data_MidInhibitor <- data_turret %>% filter(destroyedMidInhibitor==1) %>% 
  group_by(gameId,hasWon) %>% 
  summarise(d.time=min(frame))
mean(data_MidInhibitor$d.time)

data_BotInhibitor <- data_turret %>% filter(destroyedBotInhibitor==1) %>% 
  group_by(gameId,hasWon) %>% 
  summarise(d.time=min(frame))
mean(data_BotInhibitor$d.time)

"""
Inhibitor
1. TopInhibitor
Average: 27.06088 min

2. MidInhibitor
Average: 27.34279 min

3. BottomInhibitor
Average:26.711

"""


#kills / Deaths / Assists
data_kill <- data_lol %>% select(gameId,frame,hasWon,kills:assists)

#To know KDA at the end of the game, Find the play time of each game
data_kda <- data_kill %>% group_by(gameId) %>% summarise(frame=max(frame))
#inner join with  original data
data_KDA <- inner_join(data_kda,data_kill)
#Win game kill
data_KDA %>% filter(hasWon==1) %>%
  ggplot(aes(x=frame,y=kills)) +
  geom_point(stat = "identity")


#Lose game kill
data_KDA %>% filter(hasWon==0) %>%
  ggplot(aes(x=frame,y=kills)) +
  geom_point(stat = "identity")

#Both kill
data_KDA %>%
  ggplot(aes(x=frame,y=kills,color=hasWon)) +
  geom_point(stat = "identity")


#Win game death
data_KDA %>% filter(hasWon==1) %>%
  ggplot(aes(x=frame,y=deaths)) +
  geom_point(stat = "identity")


#Lose game death
data_KDA %>% filter(hasWon==0) %>%
  ggplot(aes(x=frame,y=deaths)) +
  geom_point(stat = "identity")

#Both death
data_KDA %>%
  ggplot(aes(x=frame,y=deaths,color=hasWon)) +
  geom_point(stat = "identity")


#Win game assist
data_KDA %>% filter(hasWon==1) %>%
  ggplot(aes(x=frame,y=assists)) +
  geom_point(stat = "identity")


#Lose game assist
data_KDA %>% filter(hasWon==0) %>%
  ggplot(aes(x=frame,y=assists)) +
  geom_point(stat = "identity")

#Both assist
data_KDA %>%
  ggplot(aes(x=frame,y=assists,color=hasWon)) +
  geom_point(stat = "identity")


#wards

data_wards <- data_lol %>% select(gameId,frame,hasWon,wardsPlaced:wardsLost)
# last time
jj<-data_wards %>% group_by(gameId,hasWon) %>% summarise(frame=max(frame))

join_wards <- inner_join(jj,data_wards)

join_wards %>% ggplot(aes(x=frame,y=wardsPlaced,color=hasWon))+
  geom_point(stat = "identity")
# is that meaningful??
join_win_wards <- join_wards %>% filter(hasWon==1)
join_lose_wards <- join_wards %>% filter(hasWon==0)

mean(join_win_wards$wardsPlaced)
mean(join_lose_wards$wardsPlaced)
mean(join_win_wards$wardsDestroyed)
mean(join_lose_wards$wardsDestroyed)
mean(join_win_wards$wardsLost)
mean(join_lose_wards$wardsLost)


"""
Placed(win) 83.49159
Placed(lose) 81.02263

Destroyed(win) 17.57261
Destroyed(lose) 16.32183

Lost(win) 15.41869
Lost(lose) 17.91732

"""
